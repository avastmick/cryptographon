version: 2

jobs:  
  # Python job
  build-python:
    docker:
      - image: python:latest
    environment:
      # Set your codecov token if your repository is private.
      CODECOV_TOKEN: f2aab8df-c688-42f0-8ba0-2218d120ffbe
      TZ: "/usr/share/zoneinfo/Asia/Shanghai"
    steps:
      - checkout
      - restore_cache:
          key: py-project-cache
      - run:
          name: Run Tox, to test and create coverage report
          command: |
            pip install tox
            tox
            codecov -t $CODECOV_TOKEN
      - save_cache:
          key: py-project-cache
          paths:
            - "~/.tox/dist"
  # Rust job
  build-rust:
    docker:
      - image: avastmick/rust-circleci:latest
    environment:
      # Set your codecov token if your repository is private.
      CODECOV_TOKEN: f2aab8df-c688-42f0-8ba0-2218d120ffbe
      TZ: "/usr/share/zoneinfo/Asia/Shanghai"
    steps:
      - checkout
      - restore_cache:
          key: rust-project-cache
      - run:
          name: Check formatting
          command: |
            rustfmt --version
            cargo fmt -- --write-mode=diff
      - run:
          name: Nightly Build
          command: |
            rustup run nightly rustc --version --verbose
            rustup run nightly cargo --version --verbose
            rustup run nightly cargo build
      - run:
          name: Stable Build
          command: |
            rustup run stable rustc --version --verbose
            rustup run stable cargo --version --verbose
            rustup run stable cargo build
      - run:
          name: Test
          command: rustup run stable cargo test --all
      - run:
          name: Upload Coverage
          command: |
            for file in target/debug/*-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
            bash <(curl -s https://codecov.io/bash) &&
            echo "Uploaded code coverage"
      - save_cache:
          key: rust-project-cache
          paths:
            - "~/.cargo"
            - "./target"
# Enable Workflow
workflows:
  version: 2
  build_and_test:
    jobs:
      - build-python
      - build-rust